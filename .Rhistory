# Make a matrix to hold the samples
# initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
# Make a vector to hold the number of successes over the trials
succ=c()
for(i in 1:iter){
# Fill each column with a new sample
sam.mat[,i]=sample(rep(c(1,0),c(r,N-r)),n,replace=FALSE)
# Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
# Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
# Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="HYPERGEOMETRIC simulation", xlab="Number of successes")
succ.tab/iter
}
getwd()
iter <- 100
mybin(iter, 10, 0.7)
iter <- 200
mybin(iter, 10, 0.7)
iter <- 500
mybin(iter, 10, 0.7)
iter <- 1000
mybin(iter, 10, 0.7)
iter <- 10000
mybin(iter, 10, 0.7)
round(dbinom(1:10, 10, 0.7), 4)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = FALSE, prob = NULL)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = TRUE, prob = NULL)
myhyper(iter=100, n = 20, N = , r = FALSE)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mybin=function(iter, n, p){
# make a matrix to hold the samples
#initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
#Make a vector to hold the number of successes in each trial
succ=c()
for(i in 1:iter){
#Fill each column with a new sample
sam.mat[,i]=sample(c(1,0),n,replace=TRUE, prob=c(p,1-p))
#Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
#Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
#Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="Binomial Simulation", xlab="Number of Successes")
succ.tab/iter
}
myhyper=function(iter, N, r, n){
# Make a matrix to hold the samples
# initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
# Make a vector to hold the number of successes over the trials
succ=c()
for(i in 1:iter){
# Fill each column with a new sample
sam.mat[,i]=sample(rep(c(1,0),c(r,N-r)),n,replace=FALSE)
# Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
# Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
# Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="HYPERGEOMETRIC simulation", xlab="Number of successes")
succ.tab/iter
}
getwd()
iter <- 100
mybin(iter, 10, 0.7)
iter <- 200
mybin(iter, 10, 0.7)
iter <- 500
mybin(iter, 10, 0.7)
iter <- 1000
mybin(iter, 10, 0.7)
iter <- 10000
mybin(iter, 10, 0.7)
round(dbinom(1:10, 10, 0.7), 4)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = FALSE, prob = NULL)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = TRUE, prob = NULL)
myhyper(iter=100, n = 20, N = c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), r = FALSE)
myhyper(iter=100, n = 5, N = 20, r = FALSE)
myhyper(iter=100, n = 5, N = 20, r = FALSE)
myhyper(iter=100, n = 5, N = 20, r = FALSE)
myhyper(iter=100, n = 5, N = 20, r = 20)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=200, n = 5, N = 20, r = 12)
myhyper(iter=500, n = 5, N = 20, r = 12)
myhyper(iter=1000, n = 5, N = 20, r = 12)
myhyper(iter=10000, n = 5, N = 20, r = 12)
dhyper(x=0:19, m=12, n=8, k=19)
dhyper(x=0:10, m=12, n=5, k=10)
dhyper(x=0:10, m=5, n=5, k=10)
round(dhyper(x=0:5, m=12, n=8, k=5), 4)
myhyper(iter=100, n = 5, N = 20, r = 12)
mysample=function(n, iter=10,time=0.5){
for( i in 1:iter){
#make a sample
s=sample(1:10,n,replace=TRUE)
# turn the sample into a factor
sf=factor(s,levels=1:10)
#make a barplot
barplot(table(sf)/n,beside=TRUE,col=rainbow(10),
main=paste("Example sample()", " iteration ", i, " n= ", n,sep="") ,
ylim=c(0,0.2)
)
#release the table
Sys.sleep(time)
}
}
mysample(n=1000, iter=30)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mybin=function(iter, n, p){
# make a matrix to hold the samples
#initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
#Make a vector to hold the number of successes in each trial
succ=c()
for(i in 1:iter){
#Fill each column with a new sample
sam.mat[,i]=sample(c(1,0),n,replace=TRUE, prob=c(p,1-p))
#Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
#Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
#Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="Binomial Simulation", xlab="Number of Successes")
succ.tab/iter
}
myhyper=function(iter, N, r, n){
# Make a matrix to hold the samples
# initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
# Make a vector to hold the number of successes over the trials
succ=c()
for(i in 1:iter){
# Fill each column with a new sample
sam.mat[,i]=sample(rep(c(1,0),c(r,N-r)),n,replace=FALSE)
# Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
# Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
# Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="HYPERGEOMETRIC simulation", xlab="Number of successes")
succ.tab/iter
}
mysample=function(n, iter, time){
for(i in 1:iter){
#make a sample
s=sample(1:10, n, replace = TRUE)
# turn the sample into a factor
sf=factor(s, levels = 1:10)
#make a barplot
barplot(table(sf)/n, beside=TRUE, col = rainbow(10), main=paste("Example sample()", " iteration ", i, " n= ", n,sep=""), ylim=c(0,0.2))
#release the table
Sys.sleep(time)
}
}
getwd()
iter <- 100
mybin(iter, 10, 0.7)
iter <- 200
mybin(iter, 10, 0.7)
iter <- 500
mybin(iter, 10, 0.7)
iter <- 1000
mybin(iter, 10, 0.7)
iter <- 10000
mybin(iter, 10, 0.7)
round(dbinom(1:10, 10, 0.7), 4)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = FALSE, prob = NULL)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = TRUE, prob = NULL)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=200, n = 5, N = 20, r = 12)
myhyper(iter=500, n = 5, N = 20, r = 12)
myhyper(iter=1000, n = 5, N = 20, r = 12)
myhyper(iter=10000, n = 5, N = 20, r = 12)
round(dhyper(x=0:5, m=12, n=8, k=5), 4)
mysample(n = 1000, iter = 30, time = 1)
mysample(n = 1000, iter = 30, time = 1)
choose(8, 4)
1 - ppois(q = 3, lambda = 2)
choose(10 - 1, 3 - 1) * 0.4 ^ 3 * 0.6 ^ (10 - 3)
pbinom(q = 8, size = 15, prob = 0.4)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mybin=function(iter, n, p){
# make a matrix to hold the samples
#initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
#Make a vector to hold the number of successes in each trial
succ=c()
for(i in 1:iter){
#Fill each column with a new sample
sam.mat[,i]=sample(c(1,0),n,replace=TRUE, prob=c(p,1-p))
#Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
#Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
#Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="Binomial Simulation", xlab="Number of Successes")
succ.tab/iter
}
myhyper=function(iter, N, r, n){
# Make a matrix to hold the samples
# initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
# Make a vector to hold the number of successes over the trials
succ=c()
for(i in 1:iter){
# Fill each column with a new sample
sam.mat[,i]=sample(rep(c(1,0),c(r,N-r)),n,replace=FALSE)
# Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
# Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
# Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="HYPERGEOMETRIC simulation", xlab="Number of successes")
succ.tab/iter
}
mysample=function(n, iter, time){
for(i in 1:iter){
#make a sample
s=sample(1:10, n, replace = TRUE)
# turn the sample into a factor
sf=factor(s, levels = 1:10)
#make a barplot
barplot(table(sf)/n, beside=TRUE, col = rainbow(10), main=paste("Example sample()", " iteration ", i, " n= ", n,sep=""), ylim=c(0,0.2))
#release the table
Sys.sleep(time)
}
}
getwd()
iter <- 100
mybin(iter, 10, 0.7)
iter <- 200
mybin(iter, 10, 0.7)
iter <- 500
mybin(iter, 10, 0.7)
iter <- 1000
mybin(iter, 10, 0.7)
iter <- 10000
mybin(iter, 10, 0.7)
round(dbinom(1:10, 10, 0.7), 4)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = FALSE, prob = NULL)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = TRUE, prob = NULL)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=200, n = 5, N = 20, r = 12)
myhyper(iter=500, n = 5, N = 20, r = 12)
myhyper(iter=1000, n = 5, N = 20, r = 12)
myhyper(iter=10000, n = 5, N = 20, r = 12)
round(dhyper(x=0:5, m=12, n=8, k=5), 4)
mysample(n = 1000, iter = 1, time = 1)
choose(8, 4)
1 - ppois(q = 3, lambda = 2)
choose(10 - 1, 3 - 1) * 0.4 ^ 3 * 0.6 ^ (10 - 3)
pbinom(q = 8, size = 15, prob = 0.4)
devtools::install_local("C:/Users/Hunter/Desktop/Math4753Spring2023.zip")
library(Math4753Spring2023)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mybin=function(iter, n, p){
# make a matrix to hold the samples
#initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
#Make a vector to hold the number of successes in each trial
succ=c()
for(i in 1:iter){
#Fill each column with a new sample
sam.mat[,i]=sample(c(1,0),n,replace=TRUE, prob=c(p,1-p))
#Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
#Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
#Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="Binomial Simulation", xlab="Number of Successes")
succ.tab/iter
}
myhyper=function(iter, N, r, n){
# Make a matrix to hold the samples
# initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
# Make a vector to hold the number of successes over the trials
succ=c()
for(i in 1:iter){
# Fill each column with a new sample
sam.mat[,i]=sample(rep(c(1,0),c(r,N-r)),n,replace=FALSE)
# Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
# Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
# Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="HYPERGEOMETRIC simulation", xlab="Number of successes")
succ.tab/iter
}
mysample=function(n, iter, time){
for(i in 1:iter){
#make a sample
s=sample(1:10, n, replace = TRUE)
# turn the sample into a factor
sf=factor(s, levels = 1:10)
#make a barplot
barplot(table(sf)/n, beside=TRUE, col = rainbow(10), main=paste("Example sample()", " iteration ", i, " n= ", n,sep=""), ylim=c(0,0.2))
#release the table
Sys.sleep(time)
}
}
getwd()
iter <- 100
mybin(iter, 10, 0.7)
iter <- 200
mybin(iter, 10, 0.7)
iter <- 500
mybin(iter, 10, 0.7)
iter <- 1000
mybin(iter, 10, 0.7)
iter <- 10000
mybin(iter, 10, 0.7)
round(dbinom(1:10, 10, 0.7), 4)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = FALSE, prob = NULL)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = TRUE, prob = NULL)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=200, n = 5, N = 20, r = 12)
myhyper(iter=500, n = 5, N = 20, r = 12)
myhyper(iter=1000, n = 5, N = 20, r = 12)
myhyper(iter=10000, n = 5, N = 20, r = 12)
round(dhyper(x=0:5, m=12, n=8, k=5), 4)
mysample(n = 1000, iter = 1, time = 1)
choose(8, 4)
1 - ppois(q = 3, lambda = 2)
choose(10 - 1, 3 - 1) * 0.4 ^ 3 * 0.6 ^ (10 - 3)
pbinom(q = 8, size = 15, prob = 0.4)
devtools::install_local("C:/Users/Hunter/Desktop/Math4753Spring2023.zip")
library(Math4753Spring2023)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mybin=function(iter, n, p){
# make a matrix to hold the samples
#initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
#Make a vector to hold the number of successes in each trial
succ=c()
for(i in 1:iter){
#Fill each column with a new sample
sam.mat[,i]=sample(c(1,0),n,replace=TRUE, prob=c(p,1-p))
#Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
#Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
#Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="Binomial Simulation", xlab="Number of Successes")
succ.tab/iter
}
myhyper=function(iter, N, r, n){
# Make a matrix to hold the samples
# initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
# Make a vector to hold the number of successes over the trials
succ=c()
for(i in 1:iter){
# Fill each column with a new sample
sam.mat[,i]=sample(rep(c(1,0),c(r,N-r)),n,replace=FALSE)
# Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
# Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
# Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="HYPERGEOMETRIC simulation", xlab="Number of successes")
succ.tab/iter
}
mysample=function(n, iter, time){
for(i in 1:iter){
#make a sample
s=sample(1:10, n, replace = TRUE)
# turn the sample into a factor
sf=factor(s, levels = 1:10)
#make a barplot
barplot(table(sf)/n, beside=TRUE, col = rainbow(10), main=paste("Example sample()", " iteration ", i, " n= ", n,sep=""), ylim=c(0,0.2))
#release the table
Sys.sleep(time)
}
}
getwd()
iter <- 100
mybin(iter, 10, 0.7)
iter <- 200
mybin(iter, 10, 0.7)
iter <- 500
mybin(iter, 10, 0.7)
iter <- 1000
mybin(iter, 10, 0.7)
iter <- 10000
mybin(iter, 10, 0.7)
round(dbinom(1:10, 10, 0.7), 4)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = FALSE, prob = NULL)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = TRUE, prob = NULL)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=200, n = 5, N = 20, r = 12)
myhyper(iter=500, n = 5, N = 20, r = 12)
myhyper(iter=1000, n = 5, N = 20, r = 12)
myhyper(iter=10000, n = 5, N = 20, r = 12)
round(dhyper(x=0:5, m=12, n=8, k=5), 4)
mysample(n = 1000, iter = 1, time = 1)
choose(8, 4)
1 - ppois(q = 3, lambda = 2)
choose(10 - 1, 3 - 1) * 0.4 ^ 3 * 0.6 ^ (10 - 3)
pbinom(q = 8, size = 15, prob = 0.4)
devtools::install_local("C:/Users/Hunter/Desktop/Math4753Spring2023.zip")
library(Math4753Spring2023)
Math4753Spring2023::myhyper(iter=1000, n=7, N=20, r=12)
knitr::opts_chunk$set(echo = TRUE)
pacman::p_load(pacman, tidyverse, lattice, s20x, knitr, devtools, roxygen2, testthat)
mybin=function(iter, n, p){
# make a matrix to hold the samples
#initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
#Make a vector to hold the number of successes in each trial
succ=c()
for(i in 1:iter){
#Fill each column with a new sample
sam.mat[,i]=sample(c(1,0),n,replace=TRUE, prob=c(p,1-p))
#Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
#Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
#Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="Binomial Simulation", xlab="Number of Successes")
succ.tab/iter
}
myhyper=function(iter, N, r, n){
# Make a matrix to hold the samples
# initially filled with NA's
sam.mat=matrix(NA,nr=n,nc=iter, byrow=TRUE)
# Make a vector to hold the number of successes over the trials
succ=c()
for(i in 1:iter){
# Fill each column with a new sample
sam.mat[,i]=sample(rep(c(1,0),c(r,N-r)),n,replace=FALSE)
# Calculate a statistic from the sample (this case it is the sum)
succ[i]=sum(sam.mat[,i])
}
# Make a table of successes
succ.tab=table(factor(succ,levels=0:n))
# Make a barplot of the proportions
barplot(succ.tab/(iter), col=rainbow(n+1), main="HYPERGEOMETRIC simulation", xlab="Number of successes")
succ.tab/iter
}
mysample=function(n, iter, time){
for(i in 1:iter){
#make a sample
s=sample(1:10, n, replace = TRUE)
# turn the sample into a factor
sf=factor(s, levels = 1:10)
#make a barplot
barplot(table(sf)/n, beside=TRUE, col = rainbow(10), main=paste("Example sample()", " iteration ", i, " n= ", n,sep=""), ylim=c(0,0.2))
#release the table
Sys.sleep(time)
}
}
getwd()
iter <- 100
mybin(iter, 10, 0.7)
iter <- 200
mybin(iter, 10, 0.7)
iter <- 500
mybin(iter, 10, 0.7)
iter <- 1000
mybin(iter, 10, 0.7)
iter <- 10000
mybin(iter, 10, 0.7)
round(dbinom(1:10, 10, 0.7), 4)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = FALSE, prob = NULL)
sample(c(1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0), 5, replace = TRUE, prob = NULL)
myhyper(iter=100, n = 5, N = 20, r = 12)
myhyper(iter=200, n = 5, N = 20, r = 12)
myhyper(iter=500, n = 5, N = 20, r = 12)
myhyper(iter=1000, n = 5, N = 20, r = 12)
myhyper(iter=10000, n = 5, N = 20, r = 12)
round(dhyper(x=0:5, m=12, n=8, k=5), 4)
mysample(n = 1000, iter = 1, time = 1)
choose(8, 4)
1 - ppois(q = 3, lambda = 2)
choose(10 - 1, 3 - 1) * 0.4 ^ 3 * 0.6 ^ (10 - 3)
pbinom(q = 8, size = 15, prob = 0.4)
devtools::install_local("C:/Users/Hunter/Desktop/Math4753Spring2023.zip")
Math4753Spring2023::myhyper(iter=1000, n=7, N=20, r=12)
library(Math4753Spring2023)
Math4753Spring2023::myhypergeometric(iter=1000, n=7, N=20, r=12)
library(Math4753Spring2023)
Math4753Spring2023::myhypergeometric(iter=1000, n=7, N=20, r=12)
